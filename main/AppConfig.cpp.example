#include "AppConfig.h"

// TODO: WiFi credentials - change them to match your network settings
const std::string_view AppConfig::WiFiSSID = "WIFI_SSID";
const std::string_view AppConfig::WiFiPassword = "WIFI_PASSWORD";
const std::string_view AppConfig::ntpServer = "pool.ntp.org";
const std::string_view AppConfig::timeZone = "UTC-1DST";
const uint8_t AppConfig::bme280Address = 0x76;
// I2C: GPIO21 - SDA, GPIO22 - SCL
const int8_t AppConfig::SDA = 21;
const int8_t AppConfig::SCL = 22;
// Serial1: GPIO3 - RX, GPIO1 - TX
const int8_t AppConfig::serial1RxPin = 3;
const int8_t AppConfig::serial1TxPin = 1;
// Serial2: GPIO27 - RX, GPIO26 - TX
const int8_t AppConfig::serial2RxPin = 26;
const int8_t AppConfig::serial2TxPin = 27;
// GPIO2 - built-in LED on the board
const uint8_t AppConfig::ledPin = 2;
// e-Ink display control.
// GPIO18 - SCK, GPIO19 - MISO, GPIO23 - MOSI
const uint8_t AppConfig::epdSckPin = 18;
const uint8_t AppConfig::epdMisoPin = 19;
const uint8_t AppConfig::epdMosiPin = 23;
// GPIO16 - busy, GPIO15 - reset, GPIO4 - DC, GPIO25 - CS
const uint8_t AppConfig::epdBusyPin = 16;
const uint8_t AppConfig::epdResetPin = 15;
const uint8_t AppConfig::epdDcPin = 4;
const uint8_t AppConfig::epdCsPin = 25;
// GPIO12 - step up enable
const int8_t AppConfig::stepUpPin = 13;
// GPIO2 - input pin to read battery voltage
const uint8_t AppConfig::voltagePin = 36;
// Voltage divider correction factor - experimental
const float AppConfig::voltageDividerCorrection = 1.0f;